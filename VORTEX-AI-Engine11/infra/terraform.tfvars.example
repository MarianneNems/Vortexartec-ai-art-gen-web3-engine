# =============================================================================
# VORTEX AI Engine - Terraform Variables Example
# Copy this file to terraform.tfvars and customize for your environment
# =============================================================================

# =============================================================================
# Basic Configuration
# =============================================================================

aws_region      = "us-east-1"
environment     = "prod"
domain_name     = "vortexartec.com"
s3_bucket_name  = "vortex-ai-data-lake-1752530342"

# =============================================================================
# Infrastructure Sizing
# =============================================================================

# Redis Configuration
redis_node_type                  = "cache.t3.micro"  # Use cache.r6g.large for production
redis_num_cache_clusters         = 2
redis_automatic_failover_enabled = true
redis_multi_az_enabled          = true

# ECS Configuration
vault_cpu                = 512
vault_memory            = 1024
orchestrator_cpu        = 1024
orchestrator_memory     = 2048

# Auto Scaling Configuration
orchestrator_min_capacity = 2
orchestrator_max_capacity = 10
cpu_target_value         = 70.0
memory_target_value      = 80.0

# =============================================================================
# Security Configuration
# =============================================================================

# CIDR blocks allowed to access the application
allowed_cidr_blocks = ["0.0.0.0/0"]

# Vault root token (use AWS Secrets Manager in production)
vault_root_token = "myroot"

# Skip TLS verification for Vault (development only)
vault_skip_tls_verify = false

# =============================================================================
# Monitoring Configuration
# =============================================================================

cloudwatch_log_retention_days = 7
vault_log_retention_days     = 14

# =============================================================================
# Load Balancer Configuration
# =============================================================================

enable_deletion_protection = false
ssl_policy                = "ELBSecurityPolicy-TLS-1-2-2017-01"

# =============================================================================
# Container Images
# =============================================================================

vault_image              = "vault:1.15.4"
ai_orchestrator_image    = "vortexartec/ai-orchestrator:latest"

# =============================================================================
# Database Configuration
# =============================================================================

dynamodb_billing_mode                    = "PAY_PER_REQUEST"
enable_dynamodb_point_in_time_recovery   = true

# =============================================================================
# Health Check Configuration
# =============================================================================

health_check_interval            = 30
health_check_timeout             = 5
health_check_healthy_threshold   = 2
health_check_unhealthy_threshold = 2

# =============================================================================
# Tags Configuration
# =============================================================================

common_tags = {
  Project     = "VORTEX-AI-Engine"
  Owner       = "VortexArtec"
  ManagedBy   = "Terraform"
  Cost-Center = "AI-Operations"
  Environment = "production"
}

# =============================================================================
# Production Optimizations
# =============================================================================

# For production, consider these optimizations:
# 
# redis_node_type                  = "cache.r6g.large"
# orchestrator_cpu                 = 2048
# orchestrator_memory              = 4096
# enable_deletion_protection       = true
# cloudwatch_log_retention_days    = 30
# vault_log_retention_days         = 30
# orchestrator_min_capacity        = 3
# orchestrator_max_capacity        = 20 